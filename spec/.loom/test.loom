# TODO: add in test verifications that these tests are actually doing what
# they're supposed to do.
# $ bx rspec spec/test_loom_spec.rb -f d -t file:test.loom
weave :smoke, [
  :"test:*",
  :uptime,
]

desc "a pattern with no namespace"
pattern(:uptime) { |loom, _| loom.x uptime }

module Test
  include Loom::Pattern

  with_facts { |f| f.merge a_fact: :or_fiction?  }
  let(:a_fact_len) { |f| f[:a_fact].size }

  desc "inspects the facts"
  report :the_facts do |loom, facts|
    loom.fail "this should not happen: #{a_fact_len}" unless a_fact_len == 11
  end

  desc "expects cli provided :param_facts"
  pattern :param_facts do |loom, facts|
    loom.fail "expected :param_facts" unless facts[:param_facts] == "from args"
  end

  desc "Reports `uptime` status"
  pattern :uptime do |loom, facts|
    loom << :uptime
    loom << :hostname
    loom.local << :hostname
  end
  #produces { pkg.installed? :httpd }

  desc "cd's to the /etc directory and runs `pwd`"
  pattern :cd do |loom, facts|
    loom.cd "/etc" do
      loom << :pwd
    end
  end

  desc "tests return codes from wrapped commands"
  pattern :wrap_returns do |loom, facts|
    # using loom.time as a proxy for Shell::Core#wrap here
    loom.time do
      # TODO: this should be loom.fail
      raise "wrapped true is not true" unless loom.test :true
      raise "wrapped false is not false" if loom.test :false
    end
  end

  desc "Tests a condition."
  pattern :test do |loom, facts|
    unless loom.test :false
      loom.x :echo, "i tested false"
    end

    if loom.test :true
      loom.x :echo, "i tested true"
    end

    if loom.test :which, "bash"
      loom.x :echo, "has bash"
    end
  end

  desc "Tests a grep condition."
  pattern :match do |loom, facts|
    if loom.files("/etc/hosts").match? :pattern => "aldsfja;ldjf"
      loom.fail "should not match garbage"
    else
      loom.x :echo, "I didnt match garbage"
    end

    unless loom.files("/etc/hosts").match? :pattern => "localhost"
      loom.fail "should match localhost"
    else
      loom.x :echo, "I did match my target"
    end
  end
end

desc "Wrapped time commands"
pattern :time do |loom, facts|
  loom.time do
    loom.x :echo, :hi
    loom.x :sleep, 2
  end
end
