$: << 'lib'

require 'sshkit'
require 'loom'
require 'coremods/all'
include Loom::DSL

#mod.files.cp "loom_test_file", "loom_other_file"
#mod.files.mv "a", "b"

Loom.configure do |c|
  c.sshkit_log_level = :debug
  c.log_level = :debug
end

local do 
  capture(:whoami)
end

quotes = '45.55.70.196:2222'
hosts = ['ejjohnson.net:2222', quotes]

hosts = ['vm-ubuntu-db']

on hosts do |_, mods, host|
  _.uptime
  _.echo 'i am here'

  _.local.uptime

  mods.files((1..3).to_a.map { |i| "./loom.tmp/dir.#{i}" })
    .mkdir(:flags => '-p')
    .cd { _.pwd }

  # TODO: Fix LocalJumpError for `return`, due to f'd up
  # action_hander/ActionContext binding w/ instance_exec
  # return

  mods.files(['/usr', '/opt'])
    .ls
    .stat
end

on quotes do |_, mods, host|
  _.pwd

  mods.files.rsync
    .up('./some/file/up')
    .down('./some/file/down')

  mods.files
    .touch('./loom_test_file')
    .append('./loom_test_file', :text => 'appended data')
    .cat('./loom_test_file')

  _.as :root do
    mods.files((1..5).to_a.map { |i| "./dummy.file.#{i}" })
      .touch
      .chown(:user => :erick)
  end

  mods.files.cd '/opt/options' do
    # commented out for speed reasons
    #capture(:du, '-sch')
    _.ls 'quotes'
  end

  # Not proxied by Loom::Shell
  # upload! './loom_test_file', 'loom_test_file'

  mods.files.write! './loom_write_new_file', :text => 'overwritten data'
  _.cat 'loom_write_new_file'
  _.rm 'loom_write_new_file'

  mods.files.write './loom_write_new_file', :text => 'wrote some data'
  _.cat './loom_write_new_file'

  # sudo not implemented yet
  #as :root do
  #execute(:whoami)
  # execute('whoami')
  #end
end

on 'vm-ubuntu-db' do |h|
  # unable to sudo to postgres as it's not setup in sudoers,
  # need to ensure passwordless sudo exists
  #as :postgres do
  #execute whoami
  #end
end
